{{- if .Release.IsUpgrade }}
kind: Deployment
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.upgrades.revisionHistory }}
  strategy:
    type: {{ .Values.upgrades.podReplacementStrategy }}
    {{ if eq .Values.upgrades.podReplacementStrategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.upgrades.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.upgrades.rollingUpdate.maxSurge }}
    {{ end }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        component: {{ default .Release.Name .Values.db_name }}
        type: metrics
      annotations:
        chart-version: {{.Chart.Version}}
        configmap-etc-hash: {{ include (print $.Template.BasePath "/configmap-etc.yaml") . | sha256sum }}
        # Would be nice to have metrics in Maia as well: maia.io/scrape: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ default 9187 .Values.port | quote }}
        prometheus.io/targets: {{ required ".Values.alerts.prometheus missing" .Values.alerts.prometheus | quote }}
    spec:
      containers:
      - name: metrics
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.imagePullPolicy | quote }}
        env:
        {{- $db_user := default "postgres" .Values.global.dbUser }}
        # we need support for password overrides in case passwords have a / in them (that breaks the go pq url connection parser)
        # hence we need special sauce for it (a %2F replacement for the / will help to please go)
        # PLEASE DO NOT REMOVE THIS AGAIN
        {{- if .Values.db_password }}
        - name: DATA_SOURCE_NAME
          value: postgresql://{{ $db_user }}:{{ .Values.db_password }}@{{include "db_host" .}}:{{ default 5432 .Values.db_port }}/{{ default .Release.Name .Values.db_name}}?sslmode=disable
        {{ else }}
        - name: DATA_SOURCE_NAME
          value: postgresql://{{ $db_user }}:{{ .Values.global.dbPassword | default (tuple . $db_user | include "postgres.password_for_user") }}@{{include "db_host" .}}:{{ default 5432 .Values.db_port }}/{{ default .Release.Name .Values.db_name}}?sslmode=disable
        {{- end }}
        ports:
          - name: metrics
            containerPort: {{ default 9187 .Values.port }}
        {{- if .Values.customMetrics }}
        args: ["--extend.query-path", "/conf/custom-metrics.yaml", "--log.level", {{ .Values.log_level }}]
        volumeMounts:
          - name: custom-metrics
            mountPath: /conf
            readOnly: true
        {{- end }}
        {{- if .Values.resources.enabled }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu | quote }}
            memory: {{ .Values.resources.limits.memory | quote }}
          requests:
            cpu: {{ .Values.resources.requests.cpu | quote }}
            memory: {{ .Values.resources.requests.memory | quote }}
        {{- end }}
      {{- if .Values.dependencyJobs }}
      initContainers:
        - name: init
          image: quay.io/stackanetes/kubernetes-entrypoint:v0.2.1
          imagePullPolicy: {{ default "IfNotPresent" .Values.imagePullPolicy | quote }}
          env:
            - name: DEPENDENCY_JOBS
              value: {{ .Values.dependencyJobs | quote }}
            - name: COMMAND
              value: "echo done"
          command:
            - kubernetes-entrypoint
      {{- end }}
      volumes:
      {{- if .Values.customMetrics }}
      - name: custom-metrics
        configMap:
          name: {{ template "fullname" . }}-etc
          items:
          - key: custom-metrics.yaml
            path: custom-metrics.yaml
      {{- end }}
{{- end }}
